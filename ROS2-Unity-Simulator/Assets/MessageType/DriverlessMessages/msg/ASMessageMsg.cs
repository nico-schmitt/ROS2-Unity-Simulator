//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.DriverlessMessages
{
    [Serializable]
    public class ASMessageMsg : Message
    {
        public const string k_RosMessageName = "driverless_messages/ASMessage";
        public override string RosMessageName => k_RosMessageName;

        public BuiltinInterfaces.TimeMsg stamp;
        //  Ordered list of the indices of values that are set in the values list
        public sbyte[] set_values;
        //  Ordered list of the values corresponding to the entries in set_values
        public double[] values;
        //  Example:
        //    set_values = [KEEP_DRIVING, LAP_COUNTER, ALL_NODES_STARTED, GO_RECEIVED]
        //    values     = [1.0         , 7.0        , 1.0              , 1.0        ]
        //  Means that:
        //    KEEP_DRIVING        = 1.0
        //    LAP_COUNTER         = 7.0
        //    ALL_NODES_STARTED   = 1.0
        //    GO_RECEIVED         = 1.0
        //  If the car should keep driving
        public const sbyte KEEP_DRIVING = 0;
        //  If the current mission was successfully finished
        public const sbyte MISSION_FINISHED = 1;
        //  Laps completed, starts at 0
        public const sbyte LAP_COUNTER = 2;
        //  If any Fatal Error has been noticed
        public const sbyte ERROR_FATAL = 3;
        //  If all necessary nodes have been started
        public const sbyte ALL_NODES_STARTED = 4;
        //  If the go signal from the VCU has been received
        public const sbyte GO_RECEIVED = 5;

        public ASMessageMsg()
        {
            this.stamp = new BuiltinInterfaces.TimeMsg();
            this.set_values = new sbyte[0];
            this.values = new double[0];
        }

        public ASMessageMsg(BuiltinInterfaces.TimeMsg stamp, sbyte[] set_values, double[] values)
        {
            this.stamp = stamp;
            this.set_values = set_values;
            this.values = values;
        }

        public static ASMessageMsg Deserialize(MessageDeserializer deserializer) => new ASMessageMsg(deserializer);

        private ASMessageMsg(MessageDeserializer deserializer)
        {
            this.stamp = BuiltinInterfaces.TimeMsg.Deserialize(deserializer);
            deserializer.Read(out this.set_values, sizeof(sbyte), deserializer.ReadLength());
            deserializer.Read(out this.values, sizeof(double), deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.stamp);
            serializer.WriteLength(this.set_values);
            serializer.Write(this.set_values);
            serializer.WriteLength(this.values);
            serializer.Write(this.values);
        }

        public override string ToString()
        {
            return "ASMessageMsg: " +
            "\nstamp: " + stamp.ToString() +
            "\nset_values: " + System.String.Join(", ", set_values.ToList()) +
            "\nvalues: " + System.String.Join(", ", values.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
