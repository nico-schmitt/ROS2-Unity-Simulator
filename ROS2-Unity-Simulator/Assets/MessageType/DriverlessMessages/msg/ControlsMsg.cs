//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.DriverlessMessages
{
    [Serializable]
    public class ControlsMsg : Message
    {
        public const string k_RosMessageName = "driverless_messages/Controls";
        public override string RosMessageName => k_RosMessageName;

        public BuiltinInterfaces.TimeMsg stamp;
        //  How much throttle should be applied, scaled between 0 and 1
        public float throttle;
        //  Steering angle in radians
        public float steering;
        //  Target velocity the vehicle should reach
        public float target_speed;

        public ControlsMsg()
        {
            this.stamp = new BuiltinInterfaces.TimeMsg();
            this.throttle = 0.0f;
            this.steering = 0.0f;
            this.target_speed = 0.0f;
        }

        public ControlsMsg(BuiltinInterfaces.TimeMsg stamp, float throttle, float steering, float target_speed)
        {
            this.stamp = stamp;
            this.throttle = throttle;
            this.steering = steering;
            this.target_speed = target_speed;
        }

        public static ControlsMsg Deserialize(MessageDeserializer deserializer) => new ControlsMsg(deserializer);

        private ControlsMsg(MessageDeserializer deserializer)
        {
            this.stamp = BuiltinInterfaces.TimeMsg.Deserialize(deserializer);
            deserializer.Read(out this.throttle);
            deserializer.Read(out this.steering);
            deserializer.Read(out this.target_speed);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.stamp);
            serializer.Write(this.throttle);
            serializer.Write(this.steering);
            serializer.Write(this.target_speed);
        }

        public override string ToString()
        {
            return "ControlsMsg: " +
            "\nstamp: " + stamp.ToString() +
            "\nthrottle: " + throttle.ToString() +
            "\nsteering: " + steering.ToString() +
            "\ntarget_speed: " + target_speed.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
