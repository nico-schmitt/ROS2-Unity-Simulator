//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.DriverlessMessages
{
    [Serializable]
    public class PlannedPointMsg : Message
    {
        public const string k_RosMessageName = "driverless_messages/PlannedPoint";
        public override string RosMessageName => k_RosMessageName;

        //  X position of a single point on the path
        public float x;
        //  Y position of a single point on the path
        public float y;
        //  Length of the normal vector to the left side on the driving direction in this point 
        public float width_left;
        //  Length of the normal vector to the right side on the driving direction in this point 
        public float width_right;
        //  Driveable velocity in this point, only needs to be filled by raceline optimization
        public float velocity = -1f;

        public PlannedPointMsg()
        {
            this.x = 0.0f;
            this.y = 0.0f;
            this.width_left = 0.0f;
            this.width_right = 0.0f;
        }

        public PlannedPointMsg(float x, float y, float width_left, float width_right, float velocity)
        {
            this.x = x;
            this.y = y;
            this.width_left = width_left;
            this.width_right = width_right;
            this.velocity = velocity;
        }

        public static PlannedPointMsg Deserialize(MessageDeserializer deserializer) => new PlannedPointMsg(deserializer);

        private PlannedPointMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.x);
            deserializer.Read(out this.y);
            deserializer.Read(out this.width_left);
            deserializer.Read(out this.width_right);
            deserializer.Read(out this.velocity);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.x);
            serializer.Write(this.y);
            serializer.Write(this.width_left);
            serializer.Write(this.width_right);
            serializer.Write(this.velocity);
        }

        public override string ToString()
        {
            return "PlannedPointMsg: " +
            "\nx: " + x.ToString() +
            "\ny: " + y.ToString() +
            "\nwidth_left: " + width_left.ToString() +
            "\nwidth_right: " + width_right.ToString() +
            "\nvelocity: " + velocity.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
